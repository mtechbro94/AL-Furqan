// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Identifies Hadiths relevant to a given Quranic verse and commentary.
 *
 * - identifyRelevantHadiths - A function that identifies relevant Hadiths.
 * - RelevantHadithIdentificationInput - The input type for the identifyRelevantHadiths function.
 * - RelevantHadithIdentificationOutput - The return type for the identifyRelevantHadiths function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const RelevantHadithIdentificationInputSchema = z.object({
  verseText: z.string().describe('The text of the Quranic verse.'),
  commentaryText: z.string().describe('The commentary on the verse.'),
  hadiths: z.array(z.string()).describe('An array of Hadiths to evaluate for relevance.'),
});
export type RelevantHadithIdentificationInput = z.infer<typeof RelevantHadithIdentificationInputSchema>;

const RelevantHadithIdentificationOutputSchema = z.object({
  relevantHadiths: z.array(z.string()).describe('An array of Hadiths identified as relevant.'),
});
export type RelevantHadithIdentificationOutput = z.infer<typeof RelevantHadithIdentificationOutputSchema>;

export async function identifyRelevantHadiths(input: RelevantHadithIdentificationInput): Promise<RelevantHadithIdentificationOutput> {
  return relevantHadithIdentificationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'relevantHadithIdentificationPrompt',
  input: {
    schema: z.object({
      verseText: z.string().describe('The text of the Quranic verse.'),
      commentaryText: z.string().describe('The commentary on the verse.'),
      hadiths: z.array(z.string()).describe('An array of Hadiths to evaluate for relevance.'),
    }),
  },
  output: {
    schema: z.object({
      relevantHadiths: z.array(z.string()).describe('An array of Hadiths identified as relevant.'),
    }),
  },
  prompt: `You are an expert in Islamic studies. Your task is to identify Hadiths that are relevant to a given Quranic verse, considering the provided commentary.

  Verse Text: {{{verseText}}}
  Commentary Text: {{{commentaryText}}}

  Hadiths:
  {{#each hadiths}}
  - {{{this}}}
  {{/each}}

  Identify the Hadiths that provide additional context, explanation, or understanding of the verse based on the commentary. Return only the relevant Hadiths.
  `,
});

const relevantHadithIdentificationFlow = ai.defineFlow<
  typeof RelevantHadithIdentificationInputSchema,
  typeof RelevantHadithIdentificationOutputSchema
>({
  name: 'relevantHadithIdentificationFlow',
  inputSchema: RelevantHadithIdentificationInputSchema,
  outputSchema: RelevantHadithIdentificationOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});
